
package soa;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "informatikservice", targetNamespace = "http://SOA/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Informatikservice {


    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "upload", targetNamespace = "http://SOA/", className = "soa.Upload")
    @ResponseWrapper(localName = "uploadResponse", targetNamespace = "http://SOA/", className = "soa.UploadResponse")
    @Action(input = "http://SOA/informatikservice/uploadRequest", output = "http://SOA/informatikservice/uploadResponse")
    public void upload(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        byte[] arg1);

    /**
     * 
     * @param fileName
     * @param file
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTextPDF", targetNamespace = "http://SOA/", className = "soa.GetTextPDF")
    @ResponseWrapper(localName = "getTextPDFResponse", targetNamespace = "http://SOA/", className = "soa.GetTextPDFResponse")
    @Action(input = "http://SOA/informatikservice/getTextPDFRequest", output = "http://SOA/informatikservice/getTextPDFResponse")
    public String getTextPDF(
        @WebParam(name = "fileName", targetNamespace = "")
        String fileName,
        @WebParam(name = "file", targetNamespace = "")
        byte[] file);

    /**
     * 
     * @param fileName
     * @param file
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTextDoc", targetNamespace = "http://SOA/", className = "soa.GetTextDoc")
    @ResponseWrapper(localName = "getTextDocResponse", targetNamespace = "http://SOA/", className = "soa.GetTextDocResponse")
    @Action(input = "http://SOA/informatikservice/getTextDocRequest", output = "http://SOA/informatikservice/getTextDocResponse")
    public String getTextDoc(
        @WebParam(name = "fileName", targetNamespace = "")
        String fileName,
        @WebParam(name = "file", targetNamespace = "")
        byte[] file);

    /**
     * 
     * @param fileName
     * @param file
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTextTXT", targetNamespace = "http://SOA/", className = "soa.GetTextTXT")
    @ResponseWrapper(localName = "getTextTXTResponse", targetNamespace = "http://SOA/", className = "soa.GetTextTXTResponse")
    @Action(input = "http://SOA/informatikservice/getTextTXTRequest", output = "http://SOA/informatikservice/getTextTXTResponse")
    public String getTextTXT(
        @WebParam(name = "fileName", targetNamespace = "")
        String fileName,
        @WebParam(name = "file", targetNamespace = "")
        byte[] file);

    /**
     * 
     * @param match
     * @param url
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTextHTML", targetNamespace = "http://SOA/", className = "soa.GetTextHTML")
    @ResponseWrapper(localName = "getTextHTMLResponse", targetNamespace = "http://SOA/", className = "soa.GetTextHTMLResponse")
    @Action(input = "http://SOA/informatikservice/getTextHTMLRequest", output = "http://SOA/informatikservice/getTextHTMLResponse")
    public String getTextHTML(
        @WebParam(name = "url", targetNamespace = "")
        String url,
        @WebParam(name = "match", targetNamespace = "")
        String match);

    /**
     * 
     * @param arg0
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "download", targetNamespace = "http://SOA/", className = "soa.Download")
    @ResponseWrapper(localName = "downloadResponse", targetNamespace = "http://SOA/", className = "soa.DownloadResponse")
    @Action(input = "http://SOA/informatikservice/downloadRequest", output = "http://SOA/informatikservice/downloadResponse")
    public byte[] download(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
